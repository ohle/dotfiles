#!/bin/bash

GREEN="#859900"
ORANGE="#cb4b16"
RED="#dc322f"

PIPE="$(dirname "$0")/lemonbar.pipe"
PID="$$"

if [ "$(pgrep -cx lemonbar)" -gt 0 ]
then
    echo "Panel already running" >2
    exit 1
fi

[ -e "$PIPE" ] && rm "$PIPE"
mkfifo "$PIPE"

function clock() {
    datetime=$(date "+%a %b %d, %H:%M")
    hour=$(date "+%H")
    minute=$(date "+%M")

    color="-"
    if [[ $(hostname) = "ohle" ]]
    then
        if [[ $hour = 16 ]] && [[ $minute -gt 45 ]]
        then
            color="$GREEN"
        elif [[ $hour -ge 17 ]] && [[ $minute -lt 15 ]]
        then
            color="$ORANGE"
        elif [[ $hour -ge 17 ]]
        then
            color="$RED"
        fi
    fi
    echo "CLK %{F${color}} $datetime %{F-}"
}


function email() {
    if command -v notmuch >/dev/null
    then
        inbox=$(notmuch count is:inbox)
        unread_count=$(notmuch count is:unread)
        if [[ $unread_count -gt 0 ]]
        then
            unread="%{F${ORANGE}} (${unread_count}) %{F-}"
        fi
        echo "EML Inbox: ${inbox}${unread}"
    fi
}

function focus_email() {
    bspc desktop "^2:^6" -f
    bspc node biggest.tiled.local -f
}

function perc_color() {
    percentage="${1%%.*}"
    if [[ $percentage -gt 50 ]]
    then
        echo $GREEN
    elif [[ $percentage -gt 70 ]]
    then
        echo $ORANGE
    elif [[ $percentage -gt 85 ]]
    then
        echo $RED
    else
        echo "-"
    fi
}

function memory() {
    freever=$(free --version | awk '{ print $4 }' | awk -F. '{ print $3 }')

    total=$(free | awk '/Mem/ { printf($2) }')
    used=$(free | awk '/Mem/ { printf($3) }')
    buffers=$(free | awk '/Mem/ { printf($6) }')
    cached=$(free | awk '/Mem/ { printf($7) }')
    if [[ $freever -ge 12 ]]
    then
        percentage=$(( used * 100 / total ))
    else
        percentage=$(( (used - buffers - cached) * 100 / total ))
    fi
    color=$(perc_color $percentage)
    echo "MEM %{F${color}} ${percentage}% %{F-}"
}

function cpu() {
    percentage=$(top -bn2 | awk '/%Cpu\(s\)/ { print 100 - $8 }')

    echo "CPU %{F$(perc_color "${percentage}")} ${percentage}% %{F-}"
}

function windowtitle() {
    xdotool getactivewindow getwindowname
}

function windowstate() {
    state=$(bspc query -T --node | jq -r '.client.state')
    if [[ $state == 'floating' ]]
    then
        echo " %{F${ORANGE}}f%{F-}"
    fi
}

while :; do clock; sleep 10s; done > "$PIPE" &
while :; do email; sleep 10s; done > "$PIPE" &
while :; do memory; sleep 10s; done > "$PIPE" &
while :; do cpu; sleep 10s; done > "$PIPE" &
while :; do windowtitle; sleep 10s; done > "$PIPE" &
bspc subscribe node_state node_focus  > "$PIPE" &

while read -r event
do
    case "$event" in
        CLK*)
            clock="${event:4}"
            ;;
        EML*)
            email="${event:4}"
            ;;
        MEM*)
            memory="${event:4}"
            ;;
        CPU*)
            cpu="${event:4}"
            ;;
        WTL*)
            title="${event:4}"
            ;;
        node_focus*)
            title=$(windowtitle)
            state=$(windowstate)
            ;;
        node_state*)
            title=$(windowtitle)
            state=$(windowstate)
            ;;
        *)
            unknown="%{F#ff0000}${event}%{F-}"
    esac
    echo "${clock} | %{A:focus_email:} ${email} %{A} %{c} ${title}${state} %{r} %{A:conky:} CPU: ${cpu} MEM: ${memory} %{A}"
done < "$PIPE" | lemonbar -p -f terminus-12 -B "#002b36" -F "#839496" | while read line
do
    case "$line" in
        focus_email)
            focus_email
            ;;
        conky)
            conky
            ;;
    esac
done

